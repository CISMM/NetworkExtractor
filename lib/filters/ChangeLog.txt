2009-06-23  Cory Quammen <cquammen@cs.unc.edu>

   * itkEigenValues3DToFrangiVesselnessMeasureImageFilter.h,
   itkEigenValues3DToSatoVesselnessMeasureImageFilter.h,
   itkHessian3DEigenAnalysisImageFilter.h: Added newline at end of file 
   and move comments from after #endif to above to make gcc happy.

   * itkMultiScaleHessianBasedMeasureImageFilter2.cxx: Made sure to set
   the correct number of required output images. Fixed problem where
   itk::ImageSource::GetOutput() was dynamically casting the eigenvector
   image to the output image type of the filter (a scalar image), which
   resulted in a NULL pointer.

2009-06-17  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkMultiScaleHessianBasedMeasureImageFilter2.cxx: Added missing
   "typename" keyword, which is required in C++ (but Visual Studio let's it
   pass).

2009-06-16  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkMultiScaleHessianBasedMeasureImageFilter2.h,.cxx:
   Copied this class from Review directory of current ITK release
   (3.12) and added the generation of an image containing the
   eigenvectors corresponding to the eigenvalue with the minimum
   absolute value.  These vectors are aligned with fiber-like objects
   in the image. This approach is more memory efficient than generating 
   the Hessian image, which the class already supported, followed by
   eigenanalysis.

   * CMakeLists.txt: Added the above file.

2009-05-31  Cory Quammen <cquammen@cs.unc.edu>

   * itkEigenValues3DToFrangiVesselnessMeasureImageFilter.h,.cxx:
   Changed member variable name from C to Gamma to match follow-up work
   on Frangi vesselness filter.
   
   * itkEigenValues3DToSatoVesselnessMeasureImageFilter.h: Removed
   unused typedef.

2009-05-22  Cory Quammen <cquammen@cs.unc.edu>

   * itkEigenValues3DToFrangiVesselnessMeasureImageFilter.cxx,
   itkEigenValues3DToSatoVesselnessMeasureImageFilter.cxx,
   itkEigenVectors3DToJunctionnessMeasureImageFilter.cxx,.h,
   itkHessian3DEigenAnalysisImageFilter.cxx: Added typename where gcc
   complained it was needed. Added include files that somehow
   Visual Studio finds, but not gcc. Fixed some const conversion problems.

2009-05-21  Cory Quammen <cquammen@cs.unc.edu>

   * ChangeLog.txt: Added itk/itkEigenValues3DToFrangiVesselnessMeasureImageFilter.cxx
   source file.

   * itk/itkEigenValues3DToFrangiVesselnessMeasureImageFilter.h,.cxx:
   Initial implementation of Frangi vesselness measure filter.

   * itk/itkEigenValues3DToSatoVesselnessMeasureImageFilter.h,.cxx:
   Forgot to change class name to EigenValues3DToSatoVesselnessMeasureImageFilter
   throughout.

2009-05-21  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkEigenVectors3DToVesselnessMeasureImageFilter.h,.cxx:
   Changed name of files to 
   itk/itkEigenVectors3DToSatoVesselnessMeasureImageFilter.h,.cxx

2009-04-08  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkEigenVectors3DToJunctionnessMeasureImageFilter.h,.cxx:
   Added vesselness threshold as a member variable. Added clearer
   comments.
   
   * itk/Hessian3DEigenAnalysisImageFilter.cxx: Turns out eigenvectors
   were stored in rows instead of columns, so I fixed that. Added comments.
   
   * ChangeLog.txt: Removed IntensityThresholdThinningFilter.cxx from source list.

2009-03-30  Cory Quammen <cquammen@cs.unc.edu>

   * IntensityThresholdFilter.h,.cxx: Removed these files because they
   aren't needed.

2009-03-30  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkEigenVectors3DToJunctionnessMeasureImageFilter.h,.cxx: Added
   initial implementation of the filter. Basically a type of matched filter for
   source- or sink-like structures that have no directional sense (doesn't
   matter which way the head of the vector is oriented). This should be
   useful for identifying junction points.
   
   * itk/itkHessian3DEigenAnalysisImageFilter.cxx: Changed it so that
   only one eigen vector is stored instead of all three.

2009-03-22  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkEigenVectors3DToJunctionnessMeasureImageFilter.h,.cxx: New
   class implementing a fiber junction detector. Implementation is currently
   incomplete.

2009-03-19  Cory Quammen <cquammen@cs.unc.edu>

   * itk/itkEigenValues3DToVesselnessMeasureImageFilter.h,.cxx: 
   Made the class multithreaded. Turns out to be easy to do in ITK.
   Removed image allocation in the data generation method. The superclass
   takes care of this.
   
   * itk/itkHessian3DEigenAnalysisImageFilter.h,.cxx: Made this class
   multithreaded. Overrode superclass method AllocateOutputs so that the 
   right allocation takes place. The superclass implementation allocates
   memory for just the one declared output type. When you have outputs
   of different types, say a 3-tuple and a 9-tuple per pixel, you'll probably
   declare one of these as *the* output type. Thus for the 9-tuple output,
   the superclass AllocateOutputs allocates 3-tuples instead and Bad Things
   Happen.

2009-03-17  Cory Quammen <cquammen@cs.unc.edu>

   * CMakeLists.txt: Added source files.

   * itk/: Added itk subdirectory for ITK subclasses.

   * itkEigenValues3DToVesselnessMeasureImage.h, .cxx: New class to compute a 
   vesselness measure from an image of eigen values. The eigen value image is 
   assumed to come from itkHessian3DEigenAnalysisImageFilter. Replicates
   functionality in itkHessian3DToVesselnessMeasureImageFilter, but requires
   the eigen value image as input. This seems redundant, but I need a class
   that computes the eigen vectors for the junctionness computation
   (forthcoming), and no existing class does this. Instead of computing the 
   eigen values inside the existing itkHessian3DToVesselnessMeasureImageFilter 
   class and then computing the eigen vectors again for the junctionness measure,
   I want to calculate the eigen values and vectors just once and then feed them
   into subsequent filters that compute vesselness and junctionness.
   
   * itkHessian3DEigenAnalysisImageFilter.h, .cxx: Computes eigen values
   (curvatures) and eigen vectors (principal directions of curvature) from an
   input Hessian image.

2009-03-08  Cory Quammen <cquammen@cs.unc.edu>

   * Initial check-in of source files.
