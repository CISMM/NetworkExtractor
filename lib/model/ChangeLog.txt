2009-06-23  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.cxx: Added 'typename' keyword in front of EigenVectorImageType,
   which I guess is required when you want a pointer to a typedefed class.

2009-06-17  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.cxx: Added pragma to turn off annoying Visual Studio
   warnings about deprecated functions.

2009-06-15  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Changed multiscale fiberness filter to
   itkMultiScaleHessianBasedMeasureImageFilter2. Added method to save
   skeletonized fibrin network voxels and the fiber orientations computed
   for those voxels.

2009-06-14  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added methods for changing image voxel spacing.

2009-06-10  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added thinning filter. Renamed some methods for
   clarity. Added methods for retrieving the original input image
   and the filtered image and added another ITK-to-VTK filter for
   the original image data. Added mode for computing/showing
   skeletonization.

2009-06-08  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.cxx: Changed string formatting specifier in
   printf() call to handle unsigned longs.

2009-05-31  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added ITK classes that compute multiscale
   Frangi vesselness measure (I didn't have to write it myself) and
   methods for setting parameters for those filters. Added scaling
   factor for saving files to unsigned short TIFF files.

2009-05-22  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h: Ended file with a newline.
   
   * DataModel.cxx: Added Types.h include file. Fixed initialization
   of static const members (worked in Visual C++, not gcc). Added
   'typename' keyword where it was needed by gcc (again, Visual C++ again 
   gives this a pass).

2009-05-22  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added Frangi vesselness filter and methods to
   set the coefficients used by the method.

2009-05-21  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h: Changed itkEigenValues3DToVesselnessMeasureImageFilter.h
   to itkEigenValues3DToSatoVesselnessMeasureImageFilter.h.

2009-05-21  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added filter to binarize fiberness image
   to distinguish fiber from non-fiber. Added method to set
   fiberness threshold (was using isovalue from the visualization
   before, but needed to separate out so we can look at the
   isosurface of the binary image. Added two methods to compute
   certain quantities as a function of z.

2009-05-13  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Changed "vesselness" -> "fiberness".

2009-04-08  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added a local maxima finder image filter
   to locate junctions. Added vector image type file writer to
   expert eigenvectors for visualization. Added junctionness
   spherical probe diameter member var and vesselness threshold
   member var.

2009-03-30  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Changed pixel type of the eigen vector
   image computed by Hessian3DEigenAnalysisImageFilter to be a
   single 3-element vector instead of a matrix holding all three
   eigen vectors. I need only the one corresponding to the maximum
   (minimum absolute) curvature. Moved constants for filter type
   names here. Modified SaveImageFile to take the filter name
   whose output should be saved.

2009-03-22  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Hooked in junctionness filter.

2009-03-19  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Changed output type of Hessian matrix 
   filter to float instead of double to save memory. Swapped
   in my version of the vesselness filter that uses my class 
   for computing eigen values and eigen vectors of a Hessian 
   matrix. Modified progress callback to take a character string 
   so that you can report what is making progress, e.g. which 
   image filter. Added a different progress observer for every image
   filter so I can see which filter is executing and the progress
   it is making. Changed the maximum number of threads to 2 to
   increase performance on 4-core system (seems counterintuitive,
   but that's how it is). Filter pipeline is now set up in the 
   constructor instead of in the update handler method.
   
2009-03-15  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h,.cxx: Added vesselness filter. This includes
   the ability to set a fiber diameter parameter (scale
   of the image derivative operators). Added a method to
   invoke when progress in an ITK filter is made. This in
   turn can call a callback set from the client application,
   allowing a progress bar to be updated in the UI. Switched
   to using ITK ImageFileReader instead of my own wrapper that
   wasn't really needed. Added method to save a filtered image
   (e.g., the results of the vesselness filter).

2009-03-11  Cory Quammen <cquammen@cs.unc.edu>

   * DataModel.h: Removed dirty bit stuff because it doesn't
   really make sense to have it. Added filter for performing
   thinning on image intensity thresholds. Made sure
   GetSpacing and GetDimensions don't crash if image data
   hasn't been set.

2009-03-11  Cory Quammen <cquammen@cs.unc.edu>

   * CMakeLists.txt: Initial check-in.
   
   * DataModel.h,.cxx: New class that encapsulates all data
   and data-related processing. Model in the 
   model-view-controller paradigm.
